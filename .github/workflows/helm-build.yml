name: Helm CI - TIP WLAN Cloud Master

on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.GH_AUTOMATION_KEY }}
          submodules: true
      - name: Validators setup
        working-directory: /tmp
        env:
          KUBESCORE_VERSON: 1.7.1
        run: |
          mkdir /tmp/k8s-validators

          curl -LO https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar xf kubeval-linux-amd64.tar.gz
          rm -f kubeval-linux-amd64.tar.gz

          curl -LO https://github.com/zegl/kube-score/releases/download/v${{ env.KUBESCORE_VERSON }}/kube-score_${{ env.KUBESCORE_VERSON }}_linux_amd64.tar.gz
          tar xf kube-score_${{ env.KUBESCORE_VERSON }}_linux_amd64.tar.gz
          rm -f kube-score_${{ env.KUBESCORE_VERSON }}_linux_amd64.tar.gz

          curl -LO https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz
          tar xf helm-v3.2.4-linux-amd64.tar.gz
          mv linux-amd64/helm .
          rm -fr helm-v3.2.4-linux-amd64.tar.gz linux-amd64

          echo "::add-path::/tmp/k8s-validators/"
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: /tmp/k8s-validators
          key: ${{ runner.os }}-k8s-validators
      - name: Test glusterfs
        working-directory: glusterfs/kube-templates
        run: |
          kubeval *.yaml
          kube-score score *.yaml

      # - name: Login to TIP Docker registry 
      #   uses: azure/docker-login@v1
      #   with:
      #     login-server: tip-tip-wlan-cloud-docker-repo.jfrog.io
      #     username: build-pipeline
      #     password: ${{ secrets.DOCKER_REPO_PASSWORD }}
      # - name: Login to TIP Helm chart registry
      #   run: helm repo add tip-wlan-cloud-helm-virtual-repo https://tip.jfrog.io/artifactory/tip-wlan-cloud-helm-virtual-repo --username build-pipeline --password ${{ secrets.HELM_REPO_PASSWORD }}
      # - name: Build tip-wlan chart file
      #   run: tar -czf tip-wlan.tgz tip-wlan
      # - name: Upload tip-wlan chart to the TIP helm registry
      #   run: curl -ubuild-pipeline:${{ secrets.HELM_REPO_PASSWORD }} -T tip-wlan.tgz "https://tip.jfrog.io/artifactory/tip-wlan-cloud-helm-repo/tip-wlan.tgz"
      # - name: Verify that chart was uploaded successfully
      #   run: |
      #     helm repo update
      #     helm search repo tip