bases:
- helmfile-environment.yaml
- helmfile-defaults.yaml
---

releases:
- name: postgres-{{ .Environment.Values.namespace }}
  namespace: {{ .Environment.Values.namespace }}
  chart: bitnami/postgresql
  version: 9.8.4
  condition: postgres.enabled
  labels:
    role: prerequisites
    app: postgres
  values:
  - postgresqlDatabase: tip
    image:
      tag: 11.8.0-debian-10-r58
      debug: true
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        namespace: {{ .Environment.Values.monitoring.namespace }}
        additionalLabels:
          release: prometheus-operator
    postgresqlUsername: postgres
    postgresqlPassword: DUMMY_POSTGRES_PASSWORD
    pgHbaConfiguration: |
      hostssl replication repl_user 0.0.0.0/0 md5 clientcert=0
      hostssl postgres postgres 0.0.0.0/0 cert clientcert=1
      hostssl postgres postgres ::/0 cert clientcert=1
      hostssl all all 0.0.0.0/0 md5 clientcert=1
    replication:
      enabled: true
      user: repl_user
      password: repl_password
      slaveReplicas: 1
    persistence:
      enabled: true
      storageClass: {{ .Environment.Values.storageClass }}
    volumePermissions:
      enabled: true
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    tls:
      enabled: true
      certificatesSecret: tip-{{ .Environment.Values.namespace }}-common-postgres-certs
      certFilename: cert.crt
      certKeyFilename: cert.key
      certCAFilename: cacert.pem
    initdbScriptsConfigMap: tip-{{ .Environment.Values.namespace }}-common-postgres-scripts
    extraEnv:
    - name: PGSSLCERT
      value: /opt/tip-wlan/certs/postgresclientcert.pem
    - name: PGSSLKEY
      value: /opt/tip-wlan/certs/postgresclientkey_dec.pem
    - name: PGSSLROOTCERT
      value: "/opt/tip-wlan/certs/cacert.pem"
    slave:
      extraVolumes:
  jsonPatches:
  - target:
      version: v1
      group: apps
      kind: StatefulSet
      name: postgres-{{ .Environment.Values.namespace }}-postgresql-master
    patch:
    - op: replace
      path: /spec/template/spec/initContainers/0/command
      value:
      - /bin/sh
      - -cx
      - |
        chown 1001:1001 /bitnami/postgresql
        mkdir -p /bitnami/postgresql/data /bitnami/postgresql/conf
        chmod 700 /bitnami/postgresql/data /bitnami/postgresql/conf
        find /bitnami/postgresql -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs chown -R 1001:1001
        chmod -R 777 /dev/shm
        cp /tmp/certs/* /opt/bitnami/postgresql/certs/
        chown -R 1001:1001 /opt/bitnami/postgresql/certs/
        chmod 600 /opt/bitnami/postgresql/certs/cert.key
        chmod 600 /opt/bitnami/postgresql/certs/postgresclientkey_dec.pem

- name: zookeeper-{{ .Environment.Values.namespace }}
  namespace: {{ .Environment.Values.namespace }}
  chart: incubator/zookeeper
  version: 2.1.4
  condition: zookeeper.enabled
  labels:
    role: prerequisites
    app: zookeeper
  values:
  - persistence:
      enabled: true
      storageClass: {{ .Environment.Values.storageClass }}
    replicaCount: 1

- name: kafka-{{ .Environment.Values.namespace }}
  namespace: {{ .Environment.Values.namespace }}
  chart: bitnami/kafka
  version: 11.8.7
  condition: kafka.enabled
  labels:
    role: prerequisites
    app: kafka
  values:
  - replicaCount: 1
    image:
      debug: true
    auth:
      clientProtocol: mtls
      interBrokerProtocol: plaintext
      jksSecret: tip-{{ .Environment.Values.namespace }}-common-kafka-certs
      jksPassword: mypassword
      tlsEndpointIdentificationAlgorithm: ""
    # existingConfigmap: tip-{{ .Environment.Values.namespace }}-common-kafka-config
    allowPlaintextListener: true
    persistence:
      enabled: true
      storageClass: {{ .Environment.Values.storageClass }}
    metrics:
      serviceMonitor:
        enabled: true
        namespace: {{ .Environment.Values.namespace }}
        selector:
          release: prometheus-operator
    zookeeper:
      enabled: false
    externalZookeeper:
      servers:
      - zookeeper-{{ .Environment.Values.namespace }}

- name: cassandra-{{ .Environment.Values.namespace }}
  namespace: {{ .Environment.Values.namespace }}
  chart: bitnami/cassandra
  version: 6.0.1
  condition: cassandra.enabled
  labels:
    role: prerequisites
    app: cassandra
  values:
  - tlsEncryptionSecretName: tip-{{ .Environment.Values.namespace }}-common-cassandra-certs
  - image:
      debug: true
  - persistence:
      enabled: true
      storageClass: {{ .Environment.Values.storageClass }}
  - replicaCount: 3
  - cluster:
      name: TipWlanCluster
      seedCount: 1
      internodeEncryption: all
      clientEncryption: true
  - exporter:
      enabled: false
      serviceMonitor:
        enabled: true
        additionalLabels:
          release: prometheus-operator
  - dbUser:
      user: tip_user
      password: tip_password
  - resources:
      limits: {}
      requests:
        cpu: 1
        memory: 4Gi

- name: tip-{{ .Environment.Values.namespace }}-credentials
  namespace: {{ .Environment.Values.namespace }}
  chart: tip-creds
  labels:
    role: prerequisites
    app: credentials
  values:
  - ssl:
      keyPassword: mypassword
      keystorePassword: mypassword
      truststorePassword: mypassword
    db:
      postgresUser:
        password: DUMMY_POSTGRES_PASSWORD
      tipUser:
        password: tip_password
    schema_repo:
      username: tip-read
      password: tip-read
    cassandra:
      tip_user: tip_user
      tip_password: tip_password
    websocketSessionTokenEncKey: MyToKeN0MyToKeN1
