{{- if .Values.persistence.pv.enabled -}}
kind: PersistentVolume
apiVersion: v1
metadata:
  name: {{ include "common.pv.name" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  capacity:
    storage: {{ .Values.persistence.filestoreSize }}
  accessModes:
    - {{ .Values.persistence.accessMode | quote }}
  ## NOTE: The below section is specific to Storage Type ##
  ## For now, it takes care of GlusterFS and AWS.        ##
  ## Need to add conditions for other StorageType        ##
  ## It expects you to have a Volume reserved in the     ##
  ## Storage solution                                    ## 
  {{ .Values.persistence.storageType }}:
   # Storage type is glusterFS (even if deployed in AWS)
   {{- if (eq "glusterfs" .Values.persistence.storageType) }}
    endpoints: {{ include "gluster.fullname" .}}
    path: {{ .Values.persistence.pv.name }}
    readOnly: false
   {{- else if (.Values.global.awsDeployment)}}
    # Storage type is AWS own storage class
    volumeID: {{ .Values.persistence.pv.name }}
    fsType: ext4
   {{- end }}
  persistentVolumeReclaimPolicy: Retain
{{- end -}}