# Default values for opensync-gw.
# This is a YAML-formatted file.

#################################################################
# Application configuration defaults.
#################################################################

# Declare variables to be passed into your templates.

replicaCount: 1

image:
  name: wlan-prov-service
  tag: 0.0.1-SNAPSHOT

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

## Liveness and Readiness probe values.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
probes:
  enabled: true
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
    scheme: HTTPS
  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
    scheme: HTTPS

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Enable/Disable Helm tests
testsEnabled: false

creds:
  enabled: true
  db:
    postgresUser:
      password: DUMMY_POSTGRES_PASSWORD
    tipUser:
      password: DUMMY_TIPUSER_PASSWORD

  schema_repo:
    username: DUMMY_SCHEMA_REPO_USERNAME
    password: DUMMY_SCHEMA_REPO_PASSWORD
  postgres:
    singleDataSourceUsername: DUMMY_POSTGRES_USER
    singleDataSourcePassword: DUMMY_POSTGRES_PASSWORD
    singleDataSourceSslKeyPassword: DUMMY_SSL_PASSWORD

# Enable/Disable Remote debugging
debug:
  enabled: false

service:
  type: ClusterIP
  port1: 9091
  name1: portal
  port2: 9092
  name2: secondary-port
  port3: 5007
  name3: debug

scalability:
  #asynchronous task executor - monitor metrics and adjust if tasks start being rejected
  tip_wlan_AsyncExecutor_CorePoolSize: 10
  tip_wlan_AsyncExecutor_MaxPoolSize: 50
  tip_wlan_AsyncExecutor_QueueCapacity: 50
  #max total number of persistent connections in the http client pool
  tip_wlan_httpClientConfig_maxConnectionsTotal: 100
  #max number of persistent connections in the http client pool per destination
  tip_wlan_httpClientConfig_maxConnectionsPerRoute: 10
  #max number of concurrent REST API calls a single instance of this service can process
  tip_wlan_maxHttpThreads:  100
  #memory tuning parameters for the JVM - max size, initialsize, garbage collection tuning options, etc.
  JVM_MEM_OPTIONS: " "
  #max number of connections to PostgreSQL database
  singleDataSource_maxTotalConnections: 8
  #max number of idle connections to PostgreSQL database
  singleDataSource_maxIdleConnections: 8
  #max number of cached prepared statements used in PostgreSQL database
  singleDataSource_maxPreparedStatements: 200
  #max number of cached idle prepared statements used in PostgreSQL database
  singleDataSource_maxIdlePreparedStatements: 200

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: example.com
      paths: [
         /portal
        ]
  tls:
   - secretName: portal-secret
     hosts:
       - example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  url: postgresql
  image: postgres:latest

env:
  protocol: https
  ssc_url: SSC_RELEASE_URL
  prov_url: PROV_RELEASE_URL
  ssc:
    service: wlan-ssc-service
    port: 9031
  prov:
    service: wlan-prov-service
    port: 9091
