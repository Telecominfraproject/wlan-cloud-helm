{{- $kafka := include "kafka.service" . -}}
{{- $ns := include "common.namespace" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: "{{ include "common.namespace" . }}-docker-registry-key"
      serviceAccountName: {{ include "common.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ include "common.name" . }}-readiness
          image: busybox:1.28
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          command: ['sh', '-c', "until nslookup {{ $kafka }}.{{ $ns }}.svc.cluster.local; do echo waiting for Kafka; sleep 2; done"]
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.global.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          env:
            {{- include "common.env" . | nindent 12 }}
            - name: tip.wlan.kafka.bootstrapServers
              value: {{ .Release.Name }}-kafka-headless:9093
            - name: tip.wlan.kafka.sslKeyPassword
              valueFrom:
                secretKeyRef:
                  name: {{ include "common.fullname" . }}-creds
                  key: sslKeyPassword
            - name: tip.wlan.kafka.sslKeystoreLocation
              value: /opt/tip-wlan/certs/kafka-server.pkcs12
            - name: tip.wlan.kafka.sslKeystorePassword
              valueFrom:
                secretKeyRef:
                  name: {{ include "common.fullname" . }}-creds
                  key: sslKeystorePassword
            - name: tip.wlan.kafka.sslKeystoreType
              value: PKCS12
            - name: tip.wlan.kafka.sslTruststoreLocation
              value: /opt/tip-wlan/certs/truststore.jks
            - name: tip.wlan.kafka.sslTruststorePassword
              valueFrom:
                secretKeyRef:
                  name: {{ include "common.fullname" . }}-creds
                  key: sslTruststorePassword
            - name: tip.wlan.kafka.sslTruststoreType
              value: JKS
            - name: tip.wlan.kafka.securityProtocol
              value: SSL
            - name: tip.wlan.kafka.sslEndpointIdentificationAlgorithm
              value: ''
          {{- if .Values.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.service.port2 }}
              scheme: {{ .Values.probes.livenessProbe.scheme }}
            initialDelaySeconds: {{ .Values.probes.livenessProbe.initialDelaySeconds }}  
            timeoutSeconds: {{ .Values.probes.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.probes.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.probes.livenessProbe.successThreshold }}
          readinessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.service.port2 }}
              scheme: {{ .Values.probes.readinessProbe.scheme }}
            initialDelaySeconds: {{ .Values.probes.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.probes.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.probes.readinessProbe.successThreshold }}
          {{- end }}
          volumeMounts:
          - mountPath: /opt/tip-wlan/certs/client_keystore.jks
            name: certificates
            subPath: client_keystore.jks
          - mountPath: /opt/tip-wlan/certs/truststore.jks
            name: certificates
            subPath: truststore.jks
          - mountPath: /opt/tip-wlan/certs/server.pkcs12
            name: certificates
            subPath: server.pkcs12
          - mountPath: /opt/tip-wlan/certs/kafka-server.pkcs12
            name: certificates
            subPath: kafka-server.pkcs12
          - mountPath: /app/ssc/logback.xml
            name: logback-config
            subPath: logback.xml
          ports:
            - name: {{ .Values.service.name1 }}
              containerPort: {{ .Values.service.port1 }}
              protocol: TCP
            - name: {{ .Values.service.name2 }}
              containerPort: {{ .Values.service.port2 }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

      volumes:
      - name: certificates
        secret:
          secretName: {{ include "common.fullname" . }}-certs
      - name: logback-config
        configMap:
            name: {{ include "common.fullname" . }}-log-config
