shared:
  scalability: &jvm-options
    #how many concurrent connections single instance of OpenSyncGateway can accept
    tip_wlan_ovsdb_listener_threadPoolSize: 50
    #asynchronous task executor - monitor metrics and adjust if tasks start being rejected
    tip_wlan_AsyncExecutor_CorePoolSize: 10
    tip_wlan_AsyncExecutor_MaxPoolSize: 50
    tip_wlan_AsyncExecutor_QueueCapacity: 50
    #max total number of persistent connections in the http client pool
    tip_wlan_httpClientConfig_maxConnectionsTotal: 100
    #max number of persistent connections in the http client pool per destination
    tip_wlan_httpClientConfig_maxConnectionsPerRoute: 10
    #max number of concurrent REST API calls a single instance of this service can process
    tip_wlan_maxHttpThreads:  100
    #memory tuning parameters for the JVM - max size, initialsize, garbage collection tuning options, etc.
    JVM_MEM_OPTIONS: " "
    #max number of connections to PostgreSQL database
    singleDataSource_maxTotalConnections: 8
    #max number of idle connections to PostgreSQL database
    singleDataSource_maxIdleConnections: 8
    #max number of cached prepared statements used in PostgreSQL database
    singleDataSource_maxPreparedStatements: 200
    #max number of cached idle prepared statements used in PostgreSQL database
    singleDataSource_maxIdlePreparedStatements: 200
    #max number of connections to PostgreSQL database
    singleDataSource_maxTotalConnections: 8
    #max number of idle connections to PostgreSQL database
    singleDataSource_maxIdleConnections: 8
    #max number of cached prepared statements used in PostgreSQL database
    singleDataSource_maxPreparedStatements: 200
    #max number of cached idle prepared statements used in PostgreSQL database
    singleDataSource_maxIdlePreparedStatements: 200

global:
  # Change to an unused port prefix range to prevent port conflicts
  # with other instances running within the same k8s cluster
  nodePortPrefix: 302
  nodePortPrefixExt: 304

  repository:
    registry: tip-tip-wlan-cloud-docker-repo.jfrog.io
    username: tip-read
    password: tip-read
  # image pull policy
  pullPolicy: Always

  # flag to enable debugging - application support required
  debugEnabled: false

  # Integrated Deployment which deploys Prov Service, Portal Service and 
  # SSC Service in a single docker image 
  integratedDeployment: false

  testingEnabled: false
  testingTimestamp:

  certificatePasswords:
    sslKey: &sslKeyPassword "mypassword"
    sslKeystore: &sslKeystorePassword "mypassword"
    sslTruststore: &sslTruststorePassword "mypassword"
  cassandra:
    username: tip_user
    password: tip_password
  postgres:
    password: postgres
    singleDataSource:
      username: tip_user
      password: tip_password
  tip:
    password: tip_password
  schema:
    username: tip-read
    password: tip-read

  monitoring:
    enableJmxPrometheusMetrics: false
    enablePrometheusPodMonitors: false

# DockerRegistry Secret
createDockerRegistrySecret: true

# Enabling components under Tip-wlan
opensync-gw-static:
  enabled: false
opensync-gw-cloud:
  enabled: false
  scalability:
    <<: *jvm-options
opensync-mqtt-broker:
  enabled: false
wlan-cloud-graphql-gw:
  enabled: false
wlan-cloud-static-portal:
  enabled: false
wlan-portal-service:
  enabled: false
  scalability:
    <<: *jvm-options
wlan-prov-service:
  enabled: false
  scalability:
    <<: *jvm-options
wlan-ssc-service:
  enabled: false
  scalability:
    <<: *jvm-options
wlan-spc-service:
  enabled: false
  scalability:
    <<: *jvm-options
wlan-port-forwarding-gateway-service:
  enabled: false
wlan-integrated-cloud-component-service:
  enabled: false

nginx-ingress-controller:
  enabled: false

kafka:
  initJobConfig:
    image: confluentinc/cp-kafka:5.0.1
    port: 9092
    topics:
    - name: wlan_service_metrics
      partitions: 1
      replicationFactor: 1
    - name: system_events
      partitions: 1
      replicationFactor: 1
    - name: customer_events
      partitions: 1
      replicationFactor: 1
  creds:
    sslKeyPassword: *sslKeyPassword
    sslKeystorePassword: *sslKeystorePassword
    sslTruststorePassword: *sslTruststorePassword
  enabled: false
  replicaCount: 1
  image:
    debug: true
  auth:
    clientProtocol: mtls
    interBrokerProtocol: tls
    jksSecret: tip-common-kafka-certs
    jksPassword: *sslKeystorePassword
    tlsEndpointIdentificationAlgorithm: ""
    jaas:
      clientUsers:
      - brokerUser
      clientPassword:
      - brokerPassword
  extraEnvVars:
  - name: KAFKA_CFG_SSL_KEYSTORE_TYPE
    value: PKCS12
  allowPlaintextListener: true
  persistence:
    enabled: true
    storageClass: glusterfs-storage
  metrics:
    serviceMonitor:
      enabled: false
      namespace: monitoring
      selector:
        release: prometheus-operator
  zookeeper:
    enabled: true
    persistence:
      enabled: true
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 10m
      memory: 700Mi

cassandra:
  enabled: false
  tlsEncryptionSecretName: tip-common-cassandra-certs
  image:
    debug: true
  persistence:
    enabled: true
    storageClass: glusterfs-storage
  replicaCount: 1
  cluster:
    name: TipWlanCluster
    seedCount: 1
    internodeEncryption: all
    clientEncryption: true
  exporter:
    enabled: false
    serviceMonitor:
      enabled: false
      additionalLabels:
        release: prometheus-operator
  dbUser:
    user: cassandra
    password: cassandra
  resources:
    limits:
      cpu: 2
      memory: 6Gi
    requests:
      cpu: 500m
      memory: 3Gi

postgresql:
  enabled: false
  postgresqlDatabase: tip
  image:
    debug: true
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
      namespace: monitoring
      additionalLabels:
        release: prometheus-operator
  postgresqlUsername: postgres
  postgresqlPassword: postgres
  pgHbaConfiguration: |
    hostssl replication repl_user 0.0.0.0/0 md5 clientcert=0
    hostssl postgres postgres 0.0.0.0/0 cert clientcert=1
    hostssl postgres postgres ::/0 cert clientcert=1
    hostssl all all 0.0.0.0/0 md5 clientcert=1
  replication:
    enabled: true
    user: repl_user
    password: repl_password
    slaveReplicas: 1
  persistence:
    enabled: true
    storageClass: glusterfs-storage
  volumePermissions:
    enabled: true
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  tls:
    enabled: true
    certificatesSecret: tip-common-postgres-certs
    certFilename: cert.crt
    certKeyFilename: cert.key
    certCAFilename: cacert.pem
  initdbScriptsConfigMap: tip-common-postgres-scripts
  extraEnv:
  - name: PGSSLCERT
    value: /opt/tip-wlan/certs/postgresclientcert.pem
  - name: PGSSLKEY
    value: /opt/tip-wlan/certs/postgresclientkey_dec.pem
  - name: PGSSLROOTCERT
    value: /opt/tip-wlan/certs/cacert.pem
  primary:
    extraInitContainers:
    - command: [ "sh", "-c", "chmod 0600 /opt/bitnami/postgresql/certs/postgresclientkey_dec.pem" ]
      image: busybox:latest
      name: chmod-client-cert-additional
      securityContext:
        runAsUser: 0
      volumeMounts:
      - mountPath: /opt/bitnami/postgresql/certs
        name: postgresql-certificates
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 100Mi
