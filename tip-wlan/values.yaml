shared:
  scalability: &jvm-options
    #how many concurrent connections single instance of OpenSyncGateway can accept
    tip_wlan_ovsdb_listener_threadPoolSize: 50
    #asynchronous task executor - monitor metrics and adjust if tasks start being rejected
    tip_wlan_AsyncExecutor_CorePoolSize: 10
    tip_wlan_AsyncExecutor_MaxPoolSize: 50
    tip_wlan_AsyncExecutor_QueueCapacity: 50
    #max total number of persistent connections in the http client pool
    tip_wlan_httpClientConfig_maxConnectionsTotal: 100
    #max number of persistent connections in the http client pool per destination
    tip_wlan_httpClientConfig_maxConnectionsPerRoute: 10
    #max number of concurrent REST API calls a single instance of this service can process
    tip_wlan_maxHttpThreads:  100
    #memory tuning parameters for the JVM - max size, initialsize, garbage collection tuning options, etc.
    JVM_MEM_OPTIONS: " "
    #max number of connections to PostgreSQL database
    singleDataSource_maxTotalConnections: 8
    #max number of idle connections to PostgreSQL database
    singleDataSource_maxIdleConnections: 8
    #max number of cached prepared statements used in PostgreSQL database
    singleDataSource_maxPreparedStatements: 200
    #max number of cached idle prepared statements used in PostgreSQL database
    singleDataSource_maxIdlePreparedStatements: 200
    #max number of connections to PostgreSQL database
    singleDataSource_maxTotalConnections: 8
    #max number of idle connections to PostgreSQL database
    singleDataSource_maxIdleConnections: 8
    #max number of cached prepared statements used in PostgreSQL database
    singleDataSource_maxPreparedStatements: 200
    #max number of cached idle prepared statements used in PostgreSQL database
    singleDataSource_maxIdlePreparedStatements: 200

global:
  # Change to an unused port prefix range to prevent port conflicts
  # with other instances running within the same k8s cluster
  nodePortPrefix: 302
  nodePortPrefixExt: 304

  repository: tip-tip-wlan-cloud-docker-repo.jfrog.io
  # image pull policy
  pullPolicy: Always


  # flag to enable debugging - application support required
  debugEnabled: false

  # Integrated Deployment which deploys Prov Service, Portal Service and 
  # SSC Service in a single docker image 
  integratedDeployment: false

  testingEnabled: false
  testingTimestamp:

# DockerRegistry Secret
createDockerRegistrySecret: true

# Docker Registry secret to pull docker images from WLAN repo
dockerRegistrySecret: dummySecret

# Annotations to add to the namespace
annotations: {}

# Enabling components under Tip-wlan
opensync-gw-static:
  enabled: false
opensync-gw-cloud:
  enabled: false
opensync-mqtt-broker:
  enabled: false
wlan-cloud-graphql-gw:
  enabled: false
wlan-cloud-static-portal:
  enabled: false
wlan-portal-service:
  enabled: false
wlan-prov-service:
  enabled: false
wlan-ssc-service:
  enabled: false
wlan-spc-service:
  enabled: false
wlan-port-forwarding-gateway-service:
  enabled: false
wlan-integrated-cloud-component-service:
  enabled: false
nginx-ingress-controller:
  enabled: false
kafka:
  enabled: false
cassandra:
  enabled: false
postgresql:
  enabled: false