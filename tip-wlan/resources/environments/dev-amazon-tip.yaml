# This is a development override file.
# It overrides the default Tip-Wlan parent chart behaviour
#
# It can be tweaked, based on the need to support different
# dev environments.
# This file expects to have a GlusterFS storage solution running
# before "helm install" is performed. 
#################################################################
# Global configuration overrides.
#
# These overrides will affect all helm charts (ie. applications)
# that are listed below and are 'enabled'.
#################################################################
global:
  # Change to an unused port prefix range to prevent port conflicts
  # with other instances running within the same k8s cluster
  nodePortPrefix: 302
  nodePortPrefixExt: 304
  nsPrefix: tip
  # image pull policy
  pullPolicy: Always
  repository: tip-tip-wlan-cloud-docker-repo.jfrog.io
  # override default mount path root directory
  # referenced by persistent volumes and log files
  persistence:
  # flag to enable debugging - application support required
  debugEnabled: true
# Annotations for namespace
annotations: {
    "helm.sh/resource-policy": keep
}
#createReleaseNamespace: false
# Docker registry secret
dockerRegistrySecret: ewoJImF1dGhzIjogewoJCSJ0aXAtdGlwLXdsYW4tY2xvdWQtZG9ja2VyLXJlcG8uamZyb2cuaW8iOiB7CgkJCSJhdXRoIjogImRHbHdMWEpsWVdRNmRHbHdMWEpsWVdRPSIKCQl9Cgl9LAoJIkh0dHBIZWFkZXJzIjogewoJCSJVc2VyLUFnZW50IjogIkRvY2tlci1DbGllbnQvMTkuMDMuOCAobGludXgpIgoJfQp9
#################################################################
# Enable/disable and configure helm charts (ie. applications)
# to customize the TIP-WLAN deployment.
#################################################################
opensync-gw-static:
  enabled: false
common:
  efs-provisioner:
    enabled: false
    provisioner:
      efsFileSystemId: fs-49a5104c
      awsRegion: us-west-2
      efsDnsName: fs-49a5104c.efs.us-west-2.amazonaws.com
      storageClass: aws-efs  
opensync-gw-cloud:
  enabled: true
  externalhost:
    address:
      ovsdb: opensync-controller.demo.lab.wlan.tip.build
      mqtt: opensync-mqtt-broker.demo.lab.wlan.tip.build
  persistence:
    enabled: false
  filestore:
    url: "https://wlan-filestore.testcluster.lab.wlan.tip.build"
opensync-mqtt-broker:
  enabled: true
  replicaCount: 1
  persistence:
    enabled: true
    storageClass: "gp2"
wlan-cloud-graphql-gw:
  enabled: true
  ingress:
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/group.name: ui
      alb.ingress.kubernetes.io/group.order: "2"
    enabled: true
    hosts:
    - host: wlan-graphql.testcluster.lab.wlan.tip.build    
      paths: [
        /
        ]
  env:
    portalsvc: wlan-portal-svc.testcluster.lab.wlan.tip.build
wlan-cloud-static-portal:
  enabled: true
  env:
    graphql: https://wlan-graphql.testcluster.lab.wlan.tip.build
  service:
    type: NodePort
  ingress:
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/group.name: ui
      alb.ingress.kubernetes.io/group.order: "1"
    hosts:
      - host: wlan-ui.testcluster.lab.wlan.tip.build
        paths: [
           /
          ]
wlan-portal-service:
  enabled: true
  persistence:
    enabled: true
    storageClass: gp2
    accessMode: ReadWriteOnce
    filestoreSize: 10Gi
  tsp:
    host: wlan-portal-service.testcluster.lab.wlan.tip.build
wlan-prov-service:
  enabled: true
  creds:
    enabled: true
    db:
      postgresUser:
        password: postgres
      tipUser:
        password: tip_password
    schema_repo:
      username: tip-read
      password: tip-read
wlan-ssc-service:
  enabled: true
  creds:
    sslKeyPassword: mypassword
    sslKeystorePassword: mypassword
    sslTruststorePassword: mypassword
    cassandra:
      tip_user: tip_user
      tip_password: tip_password 
    schema_repo:
      username: tip-read
      password: tip-read
wlan-spc-service:
  enabled: true
  creds:
    sslKeyPassword: mypassword
    sslKeystorePassword: mypassword
    sslTruststorePassword: mypassword
wlan-port-forwarding-gateway-service:
  enabled: true
  creds:
    websocketSessionTokenEncKey: MyToKeN0MyToKeN1
  externallyVisible:
    host: api.wlan.testcluster.lab.wlan.tip.build
    port: 30401
nginx-ingress-controller:
  enabled: true
  controller:
    nginxDebug: true
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:289708231103:certificate/eeab0cc5-f6d1-4bf2-a125-9dbf10daed42
        service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
        service.beta.kubernetes.io/aws-load-balancer-type: elb
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
      httpsPort:
        targetPort: 80
    config:
      externalStatusAddress: "api.wlan.testcluster.lab.wlan.tip.build"
zookeeper:
  enabled: true
  replicaCount: 1
  persistence:
    enabled: true
    storageClass: "gp2"
kafka:
  enabled: true
  replicaCount: 1
  persistence:
    enabled: true
    storageClass: "gp2"
  creds:
    sslKeystorePassword: mypassword
    sslTruststorePassword: mypassword
    sslKeyPassword: mypassword
cassandra:
  enabled: true
  config:
    replicaCount: 3
    seedCount: 2
  persistence:
    enabled: true
    storageClass: "gp2"
  resources:
    requests:
      cpu: 500m
      memory: 4Gi
    limits:
      cpu: 1000m
      memory: 4Gi
  creds:
    sslKeystorePassword: mypassword
    sslTruststorePassword: mypassword
postgresql:
  enabled: true
  postgresqlPassword: postgres
## NOTE: If we are using glusterfs as Storage class, we don't really need 
## replication turned on, since the data is anyway replicated on glusterfs nodes
## Replication is useful: 
## a. When we use HostPath as storage mechanism
## b. If master goes down and one of the slave is promoted as master
  replication:
    enabled: true
    slaveReplicas: 1
  persistence:
    enabled: true
    storageClass: "gp2"
