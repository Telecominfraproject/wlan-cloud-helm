shared:
  scalability: &jvm-options
    tip_wlan_ovsdb_listener_threadPoolSize: 50
    tip_wlan_AsyncExecutor_CorePoolSize: 10
    tip_wlan_AsyncExecutor_MaxPoolSize: 50
    tip_wlan_AsyncExecutor_QueueCapacity: 50
    tip_wlan_httpClientConfig_maxConnectionsTotal: 100
    tip_wlan_httpClientConfig_maxConnectionsPerRoute: 10
    tip_wlan_maxHttpThreads:  100
    JVM_MEM_OPTIONS: " "
    singleDataSource_maxTotalConnections: 8
    singleDataSource_maxIdleConnections: 8
    singleDataSource_maxPreparedStatements: 200
    singleDataSource_maxIdlePreparedStatements: 200
    singleDataSource_maxTotalConnections: 8
    singleDataSource_maxIdleConnections: 8
    singleDataSource_maxPreparedStatements: 200
    singleDataSource_maxIdlePreparedStatements: 200

global:
  nodePortPrefix: 302
  nodePortPrefixExt: 304

  pullPolicy: Always
  repository: tip-tip-wlan-cloud-docker-repo.jfrog.io

  integratedDeployment: false
  testingEnabled: false
  testingTimestamp:

dockerRegistrySecret: ewoJImF1dGhzIjogewoJCSJ0aXAtdGlwLXdsYW4tY2xvdWQtZG9ja2VyLXJlcG8uamZyb2cuaW8iOiB7CgkJCSJhdXRoIjogImRHbHdMWEpsWVdRNmRHbHdMWEpsWVdRPSIKCQl9Cgl9LAoJIkh0dHBIZWFkZXJzIjogewoJCSJVc2VyLUFnZW50IjogIkRvY2tlci1DbGllbnQvMTkuMDMuOCAobGludXgpIgoJfQp9
annotations: {
    "helm.sh/resource-policy": keep
}

opensync-gw-static:
  enabled: false

opensync-gw-cloud:
  enabled: true
  externalhost:
    address:
      ovsdb: tip-wlan-opensync-gw-cloud
      mqtt: tip-wlan-opensync-mqtt-broker
  persistence:
    enabled: true
  filestore:
    url: "https://tip-wlan-opensync-gw-cloud:9096"
  scalability:
    <<: *jvm-options

opensync-mqtt-broker:
  enabled: true
  replicaCount: 1
  persistence:
    enabled: true
    storageClass: glusterfs-storage

wlan-cloud-graphql-gw:
  enabled: true
  env:
    portalsvc: tip-wlan-wlan-portal-service:9051
  ingress:
    hosts:
      - host: wlan-ui-graphql.wlan.local
        paths: [
           /
          ]
    tls:
    - hosts:
      - wlan-ui-graphql.wlan.local
      secretName: nginx-ingress-controller-default-server-secret

wlan-cloud-static-portal:
  enabled: true
  env:
    graphql: https://wlan-ui-graphql.wlan.local
  service:
    type: NodePort
  ingress:
    hosts:
      - host: wlan-ui.wlan.local
        paths: [
           /
          ]
    tls:
    - hosts:
      - wlan-ui.wlan.local
      secretName: nginx-ingress-controller-default-server-secret

wlan-portal-service:
  enabled: true
  persistence:
    enabled: true
    storageClass: glusterfs-storage
    filestoreSize: 1Gi
  scalability:
    <<: *jvm-options

wlan-prov-service:
  enabled: true
  creds:
    enabled: true
    db:
      postgresUser:
        password: postgres
      tipUser:
        password: tip_password
    schema_repo:
      username: tip-read
      password: tip-read
    postgres:
      singleDataSourceUsername: tip_user
      singleDataSourcePassword: tip_password
      singleDataSourceSslKeyPassword: mypassword
  scalability:
    <<: *jvm-options

wlan-ssc-service:
  enabled: true
  creds:
    sslKeyPassword: mypassword
    sslKeystorePassword: mypassword
    sslTruststorePassword: mypassword
    cassandra:
      tip_user: tip_user
      tip_password: tip_password
    schema_repo:
      username: tip-read
      password: tip-read
  scalability:
    <<: *jvm-options

wlan-spc-service:
  enabled: true
  creds:
    sslKeyPassword: mypassword
    sslKeystorePassword: mypassword
    sslTruststorePassword: mypassword
  scalability:
    <<: *jvm-options

wlan-port-forwarding-gateway-service:
  enabled: true
  creds:
    websocketSessionTokenEncKey: MyToKeN0MyToKeN1
  externallyVisible:
    host: api.wlan.demo.lab.wlan.tip.build
    port: 30401

nginx-ingress-controller:
  enabled: true
  controller:
    nodeSelector: {
      type: master
    }
    config:
      externalStatusAddress: "192.168.56.101"

kafka:
  enabled: true
  replicaCount: 1
  image:
    debug: true
  auth:
    clientProtocol: mtls
    interBrokerProtocol: tls
    jksSecret: tip-common-kafka-certs
    jksPassword: mypassword
    tlsEndpointIdentificationAlgorithm: ""
    jaas:
      clientUsers:
      - brokerUser
      clientPassword:
      - brokerPassword
  extraEnvVars:
  - name: KAFKA_CFG_SSL_KEYSTORE_TYPE
    value: PKCS12
  allowPlaintextListener: true
  persistence:
    enabled: true
    storageClass: glusterfs-storage
  metrics:
    serviceMonitor:
      enabled: false
      namespace: monitoring
      selector:
        release: prometheus-operator
  zookeeper:
    enabled: true
    persistence:
      enabled: true

cassandra:
  enabled: true
  tlsEncryptionSecretName: tip-common-cassandra-certs
  image:
    debug: true
  persistence:
    enabled: true
    storageClass: glusterfs-storage
  replicaCount: 1
  cluster:
    name: TipWlanCluster
    seedCount: 1
    internodeEncryption: all
    clientEncryption: true
  exporter:
    enabled: false
    serviceMonitor:
      enabled: false
      additionalLabels:
        release: prometheus-operator
  dbUser:
    user: cassandra
    password: cassandra
  resources:
    limits: {}
    requests:
      cpu: 1
      memory: 3Gi

postgresql:
  enabled: true
  postgresqlDatabase: tip
  image:
    debug: true
  metrics:
    enabled: false
    serviceMonitor:
      enabled: falsea
      namespace: monitoring
      additionalLabels:
        release: prometheus-operator
  postgresqlUsername: postgres
  postgresqlPassword: postgres
  pgHbaConfiguration: |
    hostssl replication repl_user 0.0.0.0/0 md5 clientcert=0
    hostssl postgres postgres 0.0.0.0/0 cert clientcert=1
    hostssl postgres postgres ::/0 cert clientcert=1
    hostssl all all 0.0.0.0/0 md5 clientcert=1
  replication:
    enabled: true
    user: repl_user
    password: repl_password
    slaveReplicas: 1
  persistence:
    enabled: true
    storageClass: glusterfs-storage
  volumePermissions:
    enabled: true
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  tls:
    enabled: true
    certificatesSecret: tip-common-postgres-certs
    certFilename: cert.crt
    certKeyFilename: cert.key
    certCAFilename: cacert.pem
  initdbScriptsConfigMap: tip-common-postgres-scripts
  extraEnv:
  - name: PGSSLCERT
    value: /opt/tip-wlan/certs/postgresclientcert.pem
  - name: PGSSLKEY
    value: /opt/tip-wlan/certs/postgresclientkey_dec.pem
  - name: PGSSLROOTCERT
    value: /opt/tip-wlan/certs/cacert.pem
  primary:
    extraInitContainers:
    - command: [ "sh", "-c", "chmod 0600 /opt/bitnami/postgresql/certs/postgresclientkey_dec.pem" ]
      image: busybox:latest
      name: chmod-client-cert-additional
      securityContext:
        runAsUser: 0
      volumeMounts:
      - mountPath: /opt/bitnami/postgresql/certs
        name: postgresql-certificates
